# A generic Alembic configuration file.

[alembic]
# path to migration scripts
script_location = alembic

# template for migration file names, example: "%%(rev)s_%%(slug)s.py"
# Include date/time as a prefix but keep the revision ID as the primary identifier
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(rev)s_%%(slug)s

# sys.path entries, comma separated
# prepend_sys_path = .

# timezone for migration file naming
timezone = UTC

# Logging configuration for Alembic
# Formatted exactly like the standard Python logging module configuration.
[loggers]
keys = root,alembic,sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console
qualname = 

[logger_alembic]
level = INFO
handlers = console
qualname = alembic

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S


# --- Database Configuration ---

# The SQLAlchemy URL can be overridden by the ALCHEMY_DATABASE_URL environment variable
# or the --sqlalchemy-url command line option.
sqlalchemy.url = ${ALCHEMY_DATABASE_URL}

# Other Alembic settings...
# Set to True if you want Alembic to output SQL to stdout
# output_encoding = utf-8

# Set to True to allow Alembic to generate revision identifiers based on date
# rather than incremental numbers.
# revision_environment = false

# Set to True to indicate that the structure is multi-database.
# Set to a comma-separated list of database names to reference names
# within the migration script.
# databases =


# --- Async Configuration ---

# Set main options for async support
[alembic:async]
# This should match the driver used in your application
driver = asyncpg

# Set target metadata for autogenerate
# Import Base from your models
target_metadata = src.db.models.Base.metadata

# Other migration options... 